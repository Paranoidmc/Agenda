name: Deploy to Production

on:
  push:
    branches:
      - main  # o master, dipende dal nome del tuo branch principale

jobs:
  deploy-backend:
    name: Deploy Backend Laravel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, mbstring, pdo, curl
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /path/to/your/backend
            git pull origin main
            composer install --no-dev --optimize-autoloader --no-interaction
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan queue:restart
            sudo systemctl reload php8.3-fpm  # o php-fpm, dipende dalla versione PHP del server

  deploy-frontend:
    name: Deploy Frontend Next.js
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_FRONTEND }}
          username: ${{ secrets.SSH_USERNAME_FRONTEND }}
          key: ${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}
          port: ${{ secrets.SSH_PORT_FRONTEND }}
          script: |
            cd /path/to/your/frontend
            git pull origin main
            # Verifica che esista package-lock.json, altrimenti genera
            if [ ! -f package-lock.json ]; then
              npm install
            else
              npm ci
            fi
            # Build con variabile d'ambiente
            NEXT_PUBLIC_API_URL=https://api.edilcipriano.peels.it/api/ npm run build
            # Riavvia l'applicazione (adatta in base al tuo setup)
            # pm2 restart nextjs || npm start
